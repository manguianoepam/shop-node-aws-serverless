# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: product-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    USER_DB: ${self:custom.dotenvVars.USER_DB, env:USER_DB, ''}
    HOST_DB: ${self:custom.dotenvVars.HOST_DB, env:HOST_DB, ''}
    PWD_DB: ${self:custom.dotenvVars.PWD_DB, env:PWD_DB, ''}
    PORT_DB: ${self:custom.dotenvVars.PORT_DB, env:PORT_DB, ''}
    DB_NAME: ${self:custom.dotenvVars.DB_NAME, env:DB_NAME, ''}
    SNS_TOPIC: ${self:custom.dotenvVars.SNS_TOPIC, env:SNS_TOPIC, ''}
  iamRoleStatements:
    - Effect: Allow
      Action: 'sqs:GetQueueAttributes'
      Resource: '*'
    - Effect: Allow
      Action: 'sns:Publish'
      Resource: 'arn:aws:sns:us-east-1:436988374415:createProductTopic'
    - Effect: Allow
      Action:
        - cognito-idp:AdminInitiateAuth
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminSetUserPassword
      Resource: "*"

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"i
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

custom:
  dotenvVars: ${./configs.js)}
  webpack:
    webpackConfig: 'webpack.config.js' # Name of webpack configuration file
    includeModules: false
    packager: 'npm'

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

functions:
  getProductsList:
    handler: get-products.getProductsList
    events:
      - http:
          path: products
          method: get
          authorizer:
            name: 'cognito-login-shop'
            type: COGNITO_USER_POOLS
            arn:  arn:aws:cognito-idp:us-east-1:436988374415:userpool/us-east-1_tmvOf8pSP
          cors:
            origins: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
  getProductById:
    handler: get-product.getProductById
    events:
      - http:
          path: /products/{productId}
          method: get
          cors:
            origins: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
          request:
            parameters:
              paths:
                productId: true
  createProduct:
    handler: create-product.createProduct
    events:
      - http:
          path: products
          method: post
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
  catalogBatchProcess:
    handler: batch-process.catalogBatchProcess
    events:
      - sqs:
          arn: 'arn:aws:sqs:us-east-1:436988374415:catalogItemsQueue.fifo'
          batchSize: 5
#      - sns:
#          arn: 'arn:aws:sns:us-east-1:436988374415:createProductTopic'
#          topicName: createProductTopic